<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd ">

    <!-- 提供方应用信息，用于计算依赖关系 -->
    <dubbo:application name="hello-world-app"  />

    <!-- 使用zookeeper注册中心暴露服务地址
        protocol: 注册中心协议
        address:  注册中心地址
        port:     注册端口号
        client:   指定zookeeper客户端类型
        group:    如果注册中心为zookeeper，group则为zookeeper根节点，如果不指定则默认根节点为dubbo，可以写成路径形式
    -->
    <dubbo:registry protocol="zookeeper"
                    address="10.26.15.214"
                    client="curator"
                    port="2181"
                    group="/home/dev"/>

    <!-- 用dubbo协议在20880端口暴露服务, 可以使用 telnet命令直接访问：telnet localhost 20880-->
    <!-- 指定序列化方式 -->
    <dubbo:protocol name="dubbo" port="20880" serialization="kryo" optimizer="cn.jxzhang.dubbo.demo.KryoSerializationOptimizer"/>

    <!-- 声明需要暴露的服务接口 -->
    <dubbo:service interface="cn.jxzhang.dubbo.demo.api.GreetingService" ref="greetingService" />

    <dubbo:service interface="cn.jxzhang.dubbo.demo.api.UserManagerService" ref="userManagerService" version="1.0.0"/>

    <!-- 使用Version来暴露服务端接口版本，用于接口升级 -->
    <dubbo:service interface="cn.jxzhang.dubbo.demo.api.UserManagerService" ref="userManagerService2" version="1.0.1"/>

    <!-- 和本地bean一样实现服务 -->
    <bean id="greetingService" class="cn.jxzhang.dubbo.demo.api.impl.GreetingServiceImpl" />

    <bean id="userManagerService" class="cn.jxzhang.dubbo.demo.api.impl.UserManagerServiceImpl"/>

    <bean id="userManagerService2" class="cn.jxzhang.dubbo.demo.api.impl.UserManagerServiceImpl2"/>

    <dubbo:service interface="cn.jxzhang.dubbo.demo.api.MutiServiceImplication" ref="mutiServiceImplication1" group="g1"/>

    <dubbo:service interface="cn.jxzhang.dubbo.demo.api.MutiServiceImplication" ref="mutiServiceImplication2" group="g2"/>

    <bean id="mutiServiceImplication1" class="cn.jxzhang.dubbo.demo.api.impl.MutiServiceImplication1"/>

    <bean id="mutiServiceImplication2" class="cn.jxzhang.dubbo.demo.api.impl.MutiServiceImplication2"/>

    <dubbo:service interface="cn.jxzhang.dubbo.demo.api.TimeoutService" ref="timeoutService"/>

    <bean id="timeoutService" class="cn.jxzhang.dubbo.demo.api.impl.TimeoutServiceImpl"/>

</beans>